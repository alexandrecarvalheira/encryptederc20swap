"use client";
/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/J3Hs4lhqm1W
 */
import { Button } from "@/components/ui/button";
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import { generatePermits } from "@/lib/permits";
import { ConnectButton } from "@rainbow-me/rainbowkit";
import { contractStore } from "@/store/contractStore";
import { instanceStore } from "@/store/instanceStore";
import { useAccount } from "wagmi";
import { PermissionStruct } from "@/types/EncryptedERC20_ABI";
import { useState } from "react";

declare global {
  interface Window {
    ethereum?: any;
  }
}

export function Swap() {
  //Zustand Store
  const contractAddress = contractStore((state) => state.contractAddress);
  const erc20 = contractStore((state) => state.erc20);
  const fhenix = instanceStore((state) => state.fhenix);
  const setFhenix = instanceStore((state) => state.setFhenix);
  const provider = instanceStore((state) => state.provider);

  //Wagmi
  const { address } = useAccount();

  //State
  const [balance, setBalance] = useState<string>("Encrypted");

  const GetEncryptedBalance = async () => {
    const permit = fhenix!.exportPermits()[contractAddress!];
    const permission: PermissionStruct = fhenix!.extractPermitPermission(
      permit!
    );

    const EncryptedBalance = await erc20!.balanceOf(address!, permission);
    const DecryptedBalance = fhenix!.unseal(contractAddress!, EncryptedBalance);
    setBalance(String(DecryptedBalance));
  };

  return (
    <div
      key="1"
      className="flex flex-col items-center justify-center min-h-screen bg-gray-100 dark:bg-gray-900"
    >
      <div className="w-full max-w-md px-4 py-8 bg-white shadow-md rounded-lg dark:bg-gray-800">
        <div className="flex justify-center">
          <ConnectButton />{" "}
          <Button
            className="ml-auto"
            variant="outline"
            onClick={async () => {
              setFhenix(
                await generatePermits(contractAddress!, fhenix!, provider!)
              );
            }}
          >
            Permit
          </Button>
        </div>
        <div className="text-center mb-4">
          <h3 className="text-lg font-semibold text-gray-700 dark:text-gray-200">
            {/* Token Name: {name.data as any} */}
          </h3>
          <p className="text-sm text-gray-700 dark:text-gray-200">
            {/* Symbol: {symbol.data as any} */}
          </p>
          <p className="text-sm text-gray-700 dark:text-gray-200">
            {/* Total Supply: {totalSupply.data as any} */}
          </p>
        </div>
        <h2 className="text-3xl font-semibold text-center text-gray-800 dark:text-white">
          Token Swap
        </h2>
        <div className="mt-4 flex items-center justify-between">
          <span className="border-b w-1/5 lg:w-1/4" />
          <button
            className="text-xs text-center text-gray-500 uppercase dark:text-gray-400 hover:underline"
            // onClick={() =>
            //   writeContract({
            //     abi,
            //     address: contractAddress,
            //     functionName: "mint",
            //     args: [100000],
            //   })
            // }
          >
            Mint Tokens
          </button>
          <span className="border-b w-1/5 lg:w-1/4" />
        </div>
        <form className="mt-4">
          <div className="flex flex-col mb-2">
            <Label htmlFor="address">Address</Label>
            <Input
              id="address"
              placeholder="Enter recipient's wallet address"
              required
              type="text"
            />
          </div>
          <div className="flex items-center justify-between mt-4">
            <Button className="w-full" variant="outline">
              Swap
            </Button>
          </div>
        </form>
        <div className="mt-8">
          <h3 className="text-xs font-semibold text-gray-600 uppercase dark:text-gray-400">
            Token Balance
          </h3>
          <div className="flex items-center mt-2">
            <h2 className="text-lg font-semibold text-gray-700 dark:text-gray-200">
              {balance}
            </h2>
            <Button
              className="ml-auto"
              variant="outline"
              onClick={() => {
                GetEncryptedBalance();
              }}
            >
              decrypt
            </Button>
          </div>
        </div>
        <div className="mt-8">
          <h3 className="text-xs font-semibold text-gray-600 uppercase dark:text-gray-400">
            Transaction History
          </h3>
          <div className="flex items-center mt-2">
            <p className="text-sm text-gray-700 dark:text-gray-200">
              Minted 1000 tokens
            </p>
          </div>
          <div className="flex items-center mt-2">
            <p className="text-sm text-gray-700 dark:text-gray-200">
              Swapped 500 tokens
            </p>
          </div>
        </div>
      </div>
    </div>
  );
}
